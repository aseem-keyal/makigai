#!/bin/sh

echo $'sheru v0.0.1\npress \'h\' for help\n'
awk -F\t -v date="$(date +%Y-%m-%d)" '$8 == date {due++} $8 < date {pastdue++} END {OFS=""; print "Due: ",due," card(s) (",pastdue," past due)";}' db.tsv

review() {
	awk -F\t -v date="$(date +%Y-%m-%d)" '$8 == date {print $0} $8 < date {print $0}' db.tsv | shuf > to_study.tsv
	while read -u 3 line; do
		ID=$(echo "$line" | awk -F\t '{print $1}')
		FRONT=$(echo "$line" | awk -F\t '{print $2}')
		BACK=$(echo "$line" | awk -F\t '{print $3}')
		TAGS=$(echo "$line" | awk -F\t '{print $4}')
		REPITITION=$(echo "$line" | awk -F\t '{print $5}')
		EASINESS=$(echo "$line" | awk -F\t '{print $6}')
		INTERVAL=$(echo "$line" | awk -F\t '{print $7}')

		echo "----------------------------------------------------"
		echo "Front: " $FRONT
		read -n 1 -s -r -p $'Press any key to show back...\n'
		echo "Back: " $BACK
		read -p "[0] [1] [2] [3] [4] [5] > " GRADE
		echo "Grade: " $GRADE

		case $GRADE in 
			0|1|2 )	
				echo "Repitition: " 0 "Easiness: " $EASINESS "Interval: " 1;;
			3|4|5 )
				# TODO: collapse this into if-elseif-else statement
				if [ $REPITITION = 0 ]
				then
					INTERVAL=1 
				fi

				if [ $REPITITION = 1 ]
				then
					INTERVAL=6 
				fi

				if [ $REPITITION -gt 1 ]
				then
					INTERVAL=$(echo "(($INTERVAL*$EASINESS) + (1-($INTERVAL*$EASINESS)%1)*(($INTERVAL*$EASINESS)/1 > 1))/1" | bc) 
				fi

				EASINESS=$(echo "$EASINESS + (0.1 - (5 - $GRADE) * (0.08 + (5 - $GRADE) * 0.02))" | bc)
				if [ $(echo "$EASINESS < 1.3" | bc) = 1 ]
				then
					EASINESS=1.3
				fi
				REPITITION=$(echo "$REPITITION+1" | bc)
				echo "Repitition: " $REPITITION "Easiness: " $EASINESS "Interval: " $INTERVAL;;
		esac
	done 3< to_study.tsv
	rm to_study.tsv
}

while true; do
	read -p "> " PROMPT_INPUT

	case $PROMPT_INPUT in
		r|review )
			echo "Let's review!"; review;;
		h|help )
			echo $'press \'r\' to review\npress \'h\' for help\npress \'q\' to quit\n';;
		q|quit )
			echo "Quiting..."; break;;
		* )
			echo "What??";;
	esac
done
